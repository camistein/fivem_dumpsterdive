on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
name: Create Release

jobs:
  build_and_test:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: npm install, build, and test
        run: |
          npm install
          npm run build:prod --if-present
          npm test --if-present
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Archive release zip
        id: zip_archive_artifacts
        run: |  
          cd ${{ github.workspace }}  
          zip -r dumpsterdive.release.zip release config README.md fxmanifest.lua customFramework.js
      - name: Archive release tar
        id: tar_archive_artifacts
        run: |  
          cd ${{ github.workspace }}
          tar -czvf dumpsterdive.release.tar.gz release config README.md fxmanifest.lua customFramework.js
      - name: Upload zip artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dumpsterdive.release.zip
          asset_name: dumpsterdive.release.zip
          asset_content_type: application/zip
      - name: Upload tar artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dumpsterdive.release.tar.gz
          asset_name: dumpsterdive.release.tar.gz
          asset_content_type: application/gzip
